@startuml

package model {

class Patient {
    - nom : String 
    - prenom : String
    - dateNaissance : Date 
    - villeNaissance : String
    - noAssurance : String
    + getCoordonnees() : Coordonnees
}

class Coordonnees {
    - adresse : String
    - telephone : String
    - courriel : String
    + setAdresse (adresse : String)
    + setTelephone (Telephone : String )
    + setCourriel (courriel : String)
}

enum Genre {
    MASCULIN
    FEMININ
    AUTRE
}

class Dossier {
    + AjouterVisite (visite : Visite)
    + AjouterAntecedent (antecedent: Antecedent)
    + getVisites() : List<Visite>
    + getAntecedents() : List<Antecedent>
    + getTraitements() : List<Traitement>
}

class Visite {
    - date : Date
    - resume : String
    - notes : List<String>
    + setResume (resume: String)
    + setDiagnostic(dg: Diagnostic)
    + setTraitement(trt: Traitement)
    + ajouterNote(note: String)
    + getTraitement () : Traitement
}

class Antecedent {
    - debut : Date
    - fin : Date [0..1]
    + setDebut(date : Date)
    + setFin(date : Date)
    + setDiagnostic(dg: Diagnostic)
    + setTraitement(trt: Traitement)
}

class Diagnostic {
    - description : String
}

class Traitement {
    - description : String
}

class Medecin {
    - nom : String 
    - prenom : String
    - permis : String
    - specialite : String
}

class Etablissement {
    - id : String
    - description : String
}

class Utilisateur { 
    - username : String 
    - password : String 
    } 

}

package connexion {

Interface SourceDonnees {
    
}

interface Recherchable {
    + findbyId(id : String) : Optional<T>
    + findbyUsernameAndPassword (username : String, password: String) : Optional<T>
}

interface Modifiable {
    + update(t : T)
}

class SourceDonneesImplem {
    + ^findbyId(id : String) : Optional<Dossier>
    + ^findbyUsernameAndPassword (username : String, password: String) : Optional<Dossier>
    + ^update(d : Dossier)
}

}

package controleur {

class Session {
    - modified : boolean
    + telechargerDossier(noAss : String)
    + enregistrerDossier()
    + creerVisite()
    + creerAntecedent()
    + annulerModification()
    + getVisitesPrescripteur() : List<Visite>
    + getVisitesHistorique() : List<Visite>
    + getAntecedentsPrescripteur() : List<Antecedent>
    + getAntecedentsHistorique() : List<Antecedent>
    + getTraitements() : List<Traitement>
}

interface authentifiable {
    + login() ; boolean
}

class ConnexionControleur {
    - validerSaisie()
    + seConnecter()
}

class PatientControleur {
    + afficherPatient()
}

class PrescripteurControleur {
    + afficherVisites()
    + afficherAntecedents()
    + creerVisite()
    + enregistrerVisite()
    + ajouterAntecedent()
    + enregistrerNouvelAntecedent()
}

class HistoriqueControleur {
    + afficherVisites()
    + afficherAntecedents()
    + afficherTraitements()
}

}

package vue {

class ConnexionVue {
}

class PatientVue{

}

class PrescripteurVue {

}

class HistoriqueVue {

}

}

package main {

class Main {
    + {static} main (args : String[])
}

}






Patient *--> "1\ncoordonnées" Coordonnees
Patient #--> "0..2\nparents" Patient
Patient #--> "1\ngenre" Genre

Dossier *--> "*\nvisites" Visite
Dossier *--> "*\nantécédents" Antecedent
Dossier *---> "1\npatient" Patient

Visite *--> "0..1\ndiagnostic" Diagnostic
Visite *--> "0..1\ntraitement" Traitement
Visite #--> "1\nmedecin" Medecin

Antecedent #--> "1\ntraitant" Medecin
Antecedent #--> "1\diagnostic" Diagnostic
Antecedent #--> "1\ntraitement" Traitement

Medecin #--> "1\netablissement" Etablissement


Session .l.|> authentifiable

SourceDonnees .d.|> Modifiable
SourceDonnees  .|> Recherchable
SourceDonnees <|.. SourceDonneesImplem


ConnexionControleur #--> Session
PatientControleur #--> Session
PrescripteurControleur #--> Session
HistoriqueControleur #--> Session

vue <. main
main ..> controleur

vue <..> controleur

controleur ..> model

controleur .> connexion

@enduml